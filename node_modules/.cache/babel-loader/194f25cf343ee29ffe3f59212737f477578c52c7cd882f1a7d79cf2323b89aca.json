{"ast":null,"code":"// import * as React from 'react';\n// import PropTypes from 'prop-types';\n\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Grid from '@mui/material/Grid';\n// import Stack from '@mui/material/Stack';\n// import Step from '@mui/material/Step';\n// import StepLabel from '@mui/material/StepLabel';\n// import Stepper from '@mui/material/Stepper';\n// import ToggleButton from '@mui/material/ToggleButton';\n// import ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n// import Typography from '@mui/material/Typography';\n\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// import ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\n// import AutoAwesomeRoundedIcon from '@mui/icons-material/AutoAwesomeRounded';\n// import ChevronLeftRoundedIcon from '@mui/icons-material/ChevronLeftRounded';\n// import ChevronRightRoundedIcon from '@mui/icons-material/ChevronRightRounded';\n\n// import AddressForm from './AddressForm';\n// import getCheckoutTheme from './getCheckoutTheme';\n// import Info from './Info';\n// import InfoMobile from './InfoMobile';\n// import PaymentForm from './PaymentForm';\n// import Review from './Review';\n// import ToggleColorMode from './ToggleColorMode';\n\n// function ToggleCustomTheme({ showCustomTheme, toggleCustomTheme }) {\n//   return (\n//     <Box\n//       sx={{\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         width: '100dvw',\n//         position: 'fixed',\n//         bottom: 24,\n//       }}\n//     >\n//       <ToggleButtonGroup\n//         color=\"primary\"\n//         exclusive\n//         value={showCustomTheme}\n//         onChange={toggleCustomTheme}\n//         aria-label=\"Platform\"\n//         sx={{\n//           backgroundColor: 'background.default',\n//           '& .Mui-selected': {\n//             pointerEvents: 'none',\n//           },\n//         }}\n//       >\n//         <ToggleButton value>\n//           <AutoAwesomeRoundedIcon sx={{ fontSize: '20px', mr: 1 }} />\n//           Custom theme\n//         </ToggleButton>\n//         <ToggleButton value={false}>Material Design 2</ToggleButton>\n//       </ToggleButtonGroup>\n//     </Box>\n//   );\n// }\n\n// ToggleCustomTheme.propTypes = {\n//   showCustomTheme: PropTypes.shape({\n//     valueOf: PropTypes.func.isRequired,\n//   }).isRequired,\n//   toggleCustomTheme: PropTypes.func.isRequired,\n// };\n\n// const steps = ['Shipping address', 'Payment details', 'Review your order'];\n\n// const logoStyle = {\n//   width: '140px',\n//   height: '56px',\n//   marginLeft: '-4px',\n//   marginRight: '-8px',\n// };\n\n// function getStepContent(step) {\n//   switch (step) {\n//     case 0:\n//       return <AddressForm />;\n//     case 1:\n//       return <PaymentForm />;\n//     case 2:\n//       return <Review />;\n//     default:\n//       throw new Error('Unknown step');\n//   }\n// }\n\n// export default function Checkout() {\n//   const [mode, setMode] = React.useState('light');\n//   const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n//   const checkoutTheme = createTheme(getCheckoutTheme(mode));\n//   const defaultTheme = createTheme({ palette: { mode } });\n//   const [activeStep, setActiveStep] = React.useState(0);\n\n//   const toggleColorMode = () => {\n//     setMode((prev) => (prev === 'dark' ? 'light' : 'dark'));\n//   };\n\n//   const toggleCustomTheme = () => {\n//     setShowCustomTheme((prev) => !prev);\n//   };\n\n//   const handleNext = () => {\n//     setActiveStep(activeStep + 1);\n//   };\n\n//   const handleBack = () => {\n//     setActiveStep(activeStep - 1);\n//   };\n\n//   return (\n//     <ThemeProvider theme={showCustomTheme ? checkoutTheme : defaultTheme}>\n//       <CssBaseline />\n//       <Grid container sx={{ height: { xs: '100%', sm: '100dvh' } }}>\n//         <Grid\n//           item\n//           xs={12}\n//           sm={5}\n//           lg={4}\n//           sx={{\n//             display: { xs: 'none', md: 'flex' },\n//             flexDirection: 'column',\n//             backgroundColor: 'background.paper',\n//             borderRight: { sm: 'none', md: '1px solid' },\n//             borderColor: { sm: 'none', md: 'divider' },\n//             alignItems: 'start',\n//             pt: 4,\n//             px: 10,\n//             gap: 4,\n//           }}\n//         >\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               alignItems: 'end',\n//               height: 150,\n//             }}\n//           >\n//             <Button\n//               startIcon={<ArrowBackRoundedIcon />}\n//               component=\"a\"\n//               href=\"/material-ui/getting-started/templates/landing-page/\"\n//               sx={{ ml: '-8px' }}\n//             >\n//               Back to\n//               <img\n//                 src={\n//                   'https://assets-global.website-files.com/61ed56ae9da9fd7e0ef0a967/61f12e6faf73568658154dae_SitemarkDefault.svg'\n//                 }\n//                 style={logoStyle}\n//                 alt=\"Sitemark's logo\"\n//               />\n//             </Button>\n//           </Box>\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               flexGrow: 1,\n//               width: '100%',\n//               maxWidth: 500,\n//             }}\n//           >\n//             <Info totalPrice={activeStep >= 2 ? '$144.97' : '$134.98'} />\n//           </Box>\n//         </Grid>\n//         <Grid\n//           item\n//           sm={12}\n//           md={7}\n//           lg={8}\n//           sx={{\n//             display: 'flex',\n//             flexDirection: 'column',\n//             maxWidth: '100%',\n//             width: '100%',\n//             backgroundColor: { xs: 'transparent', sm: 'background.default' },\n//             alignItems: 'start',\n//             pt: { xs: 2, sm: 4 },\n//             px: { xs: 2, sm: 10 },\n//             gap: { xs: 4, md: 8 },\n//           }}\n//         >\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               justifyContent: { sm: 'space-between', md: 'flex-end' },\n//               alignItems: 'center',\n//               width: '100%',\n//               maxWidth: { sm: '100%', md: 600 },\n//             }}\n//           >\n//             <Box\n//               sx={{\n//                 display: { xs: 'flex', md: 'none' },\n//                 flexDirection: 'row',\n//                 width: '100%',\n//                 justifyContent: 'space-between',\n//               }}\n//             >\n//               <Button\n//                 startIcon={<ArrowBackRoundedIcon />}\n//                 component=\"a\"\n//                 href=\"/material-ui/getting-started/templates/landing-page/\"\n//                 sx={{ alignSelf: 'start' }}\n//               >\n//                 Back to\n//                 <img\n//                   src={\n//                     'https://assets-global.website-files.com/61ed56ae9da9fd7e0ef0a967/61f12e6faf73568658154dae_SitemarkDefault.svg'\n//                   }\n//                   style={logoStyle}\n//                   alt=\"Sitemark's logo\"\n//                 />\n//               </Button>\n//               <ToggleColorMode mode={mode} toggleColorMode={toggleColorMode} />\n//             </Box>\n//             <Box\n//               sx={{\n//                 display: { xs: 'none', md: 'flex' },\n//                 flexDirection: 'column',\n//                 justifyContent: 'space-between',\n//                 alignItems: 'flex-end',\n//                 flexGrow: 1,\n//                 height: 150,\n//               }}\n//             >\n//               <ToggleColorMode mode={mode} toggleColorMode={toggleColorMode} />\n//               <Stepper\n//                 id=\"desktop-stepper\"\n//                 activeStep={activeStep}\n//                 sx={{\n//                   width: '100%',\n//                   height: 40,\n//                 }}\n//               >\n//                 {steps.map((label) => (\n//                   <Step\n//                     sx={{\n//                       ':first-child': { pl: 0 },\n//                       ':last-child': { pr: 0 },\n//                     }}\n//                     key={label}\n//                   >\n//                     <StepLabel>{label}</StepLabel>\n//                   </Step>\n//                 ))}\n//               </Stepper>\n//             </Box>\n//           </Box>\n//           <Card\n//             sx={{\n//               display: { xs: 'flex', md: 'none' },\n//               width: '100%',\n//             }}\n//           >\n//             <CardContent\n//               sx={{\n//                 display: 'flex',\n//                 width: '100%',\n//                 alignItems: 'center',\n//                 justifyContent: 'space-between',\n//                 ':last-child': { pb: 2 },\n//               }}\n//             >\n//               <div>\n//                 <Typography variant=\"subtitle2\" gutterBottom>\n//                   Selected products\n//                 </Typography>\n//                 <Typography variant=\"body1\">\n//                   {activeStep >= 2 ? '$144.97' : '$134.98'}\n//                 </Typography>\n//               </div>\n//               <InfoMobile totalPrice={activeStep >= 2 ? '$144.97' : '$134.98'} />\n//             </CardContent>\n//           </Card>\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               flexGrow: 1,\n//               width: '100%',\n//               maxWidth: { sm: '100%', md: 600 },\n//               maxHeight: '720px',\n//               gap: { xs: 5, md: 'none' },\n//             }}\n//           >\n//             <Stepper\n//               id=\"mobile-stepper\"\n//               activeStep={activeStep}\n//               alternativeLabel\n//               sx={{ display: { sm: 'flex', md: 'none' } }}\n//             >\n//               {steps.map((label) => (\n//                 <Step\n//                   sx={{\n//                     ':first-child': { pl: 0 },\n//                     ':last-child': { pr: 0 },\n//                     '& .MuiStepConnector-root': { top: { xs: 6, sm: 12 } },\n//                   }}\n//                   key={label}\n//                 >\n//                   <StepLabel\n//                     sx={{ '.MuiStepLabel-labelContainer': { maxWidth: '70px' } }}\n//                   >\n//                     {label}\n//                   </StepLabel>\n//                 </Step>\n//               ))}\n//             </Stepper>\n//             {activeStep === steps.length ? (\n//               <Stack spacing={2} useFlexGap>\n//                 <Typography variant=\"h1\">📦</Typography>\n//                 <Typography variant=\"h5\">Thank you for your order!</Typography>\n//                 <Typography variant=\"body1\" color=\"text.secondary\">\n//                   Your order number is\n//                   <strong>&nbsp;#140396</strong>. We have emailed your order\n//                   confirmation and will update you once its shipped.\n//                 </Typography>\n//                 <Button\n//                   variant=\"contained\"\n//                   sx={{\n//                     alignSelf: 'start',\n//                     width: { xs: '100%', sm: 'auto' },\n//                   }}\n//                 >\n//                   Go to my orders\n//                 </Button>\n//               </Stack>\n//             ) : (\n//               <React.Fragment>\n//                 {getStepContent(activeStep)}\n//                 <Box\n//                   sx={{\n//                     display: 'flex',\n//                     flexDirection: { xs: 'column-reverse', sm: 'row' },\n//                     justifyContent: activeStep !== 0 ? 'space-between' : 'flex-end',\n//                     alignItems: 'end',\n//                     flexGrow: 1,\n//                     gap: 1,\n//                     pb: { xs: 12, sm: 0 },\n//                     mt: { xs: 2, sm: 0 },\n//                     mb: '60px',\n//                   }}\n//                 >\n//                   {activeStep !== 0 && (\n//                     <Button\n//                       startIcon={<ChevronLeftRoundedIcon />}\n//                       onClick={handleBack}\n//                       variant=\"text\"\n//                       sx={{\n//                         display: { xs: 'none', sm: 'flex' },\n//                       }}\n//                     >\n//                       Previous\n//                     </Button>\n//                   )}\n\n//                   {activeStep !== 0 && (\n//                     <Button\n//                       startIcon={<ChevronLeftRoundedIcon />}\n//                       onClick={handleBack}\n//                       variant=\"outlined\"\n//                       fullWidth\n//                       sx={{\n//                         display: { xs: 'flex', sm: 'none' },\n//                       }}\n//                     >\n//                       Previous\n//                     </Button>\n//                   )}\n\n//                   <Button\n//                     variant=\"contained\"\n//                     endIcon={<ChevronRightRoundedIcon />}\n//                     onClick={handleNext}\n//                     sx={{\n//                       width: { xs: '100%', sm: 'fit-content' },\n//                     }}\n//                   >\n//                     {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n//                   </Button>\n//                 </Box>\n//               </React.Fragment>\n//             )}\n//           </Box>\n//         </Grid>\n//       </Grid>\n//       <ToggleCustomTheme\n//         toggleCustomTheme={toggleCustomTheme}\n//         showCustomTheme={showCustomTheme}\n//       />\n//     </ThemeProvider>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/brandonreynolds/Documents/GitHub/NEWSDSUESPORTS/my-app/src/components/pages/checkout.js"],"sourcesContent":["// import * as React from 'react';\n// import PropTypes from 'prop-types';\n\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Grid from '@mui/material/Grid';\n// import Stack from '@mui/material/Stack';\n// import Step from '@mui/material/Step';\n// import StepLabel from '@mui/material/StepLabel';\n// import Stepper from '@mui/material/Stepper';\n// import ToggleButton from '@mui/material/ToggleButton';\n// import ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n// import Typography from '@mui/material/Typography';\n\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// import ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\n// import AutoAwesomeRoundedIcon from '@mui/icons-material/AutoAwesomeRounded';\n// import ChevronLeftRoundedIcon from '@mui/icons-material/ChevronLeftRounded';\n// import ChevronRightRoundedIcon from '@mui/icons-material/ChevronRightRounded';\n\n// import AddressForm from './AddressForm';\n// import getCheckoutTheme from './getCheckoutTheme';\n// import Info from './Info';\n// import InfoMobile from './InfoMobile';\n// import PaymentForm from './PaymentForm';\n// import Review from './Review';\n// import ToggleColorMode from './ToggleColorMode';\n\n// function ToggleCustomTheme({ showCustomTheme, toggleCustomTheme }) {\n//   return (\n//     <Box\n//       sx={{\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         width: '100dvw',\n//         position: 'fixed',\n//         bottom: 24,\n//       }}\n//     >\n//       <ToggleButtonGroup\n//         color=\"primary\"\n//         exclusive\n//         value={showCustomTheme}\n//         onChange={toggleCustomTheme}\n//         aria-label=\"Platform\"\n//         sx={{\n//           backgroundColor: 'background.default',\n//           '& .Mui-selected': {\n//             pointerEvents: 'none',\n//           },\n//         }}\n//       >\n//         <ToggleButton value>\n//           <AutoAwesomeRoundedIcon sx={{ fontSize: '20px', mr: 1 }} />\n//           Custom theme\n//         </ToggleButton>\n//         <ToggleButton value={false}>Material Design 2</ToggleButton>\n//       </ToggleButtonGroup>\n//     </Box>\n//   );\n// }\n\n// ToggleCustomTheme.propTypes = {\n//   showCustomTheme: PropTypes.shape({\n//     valueOf: PropTypes.func.isRequired,\n//   }).isRequired,\n//   toggleCustomTheme: PropTypes.func.isRequired,\n// };\n\n// const steps = ['Shipping address', 'Payment details', 'Review your order'];\n\n// const logoStyle = {\n//   width: '140px',\n//   height: '56px',\n//   marginLeft: '-4px',\n//   marginRight: '-8px',\n// };\n\n// function getStepContent(step) {\n//   switch (step) {\n//     case 0:\n//       return <AddressForm />;\n//     case 1:\n//       return <PaymentForm />;\n//     case 2:\n//       return <Review />;\n//     default:\n//       throw new Error('Unknown step');\n//   }\n// }\n\n// export default function Checkout() {\n//   const [mode, setMode] = React.useState('light');\n//   const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n//   const checkoutTheme = createTheme(getCheckoutTheme(mode));\n//   const defaultTheme = createTheme({ palette: { mode } });\n//   const [activeStep, setActiveStep] = React.useState(0);\n\n//   const toggleColorMode = () => {\n//     setMode((prev) => (prev === 'dark' ? 'light' : 'dark'));\n//   };\n\n//   const toggleCustomTheme = () => {\n//     setShowCustomTheme((prev) => !prev);\n//   };\n\n//   const handleNext = () => {\n//     setActiveStep(activeStep + 1);\n//   };\n\n//   const handleBack = () => {\n//     setActiveStep(activeStep - 1);\n//   };\n\n//   return (\n//     <ThemeProvider theme={showCustomTheme ? checkoutTheme : defaultTheme}>\n//       <CssBaseline />\n//       <Grid container sx={{ height: { xs: '100%', sm: '100dvh' } }}>\n//         <Grid\n//           item\n//           xs={12}\n//           sm={5}\n//           lg={4}\n//           sx={{\n//             display: { xs: 'none', md: 'flex' },\n//             flexDirection: 'column',\n//             backgroundColor: 'background.paper',\n//             borderRight: { sm: 'none', md: '1px solid' },\n//             borderColor: { sm: 'none', md: 'divider' },\n//             alignItems: 'start',\n//             pt: 4,\n//             px: 10,\n//             gap: 4,\n//           }}\n//         >\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               alignItems: 'end',\n//               height: 150,\n//             }}\n//           >\n//             <Button\n//               startIcon={<ArrowBackRoundedIcon />}\n//               component=\"a\"\n//               href=\"/material-ui/getting-started/templates/landing-page/\"\n//               sx={{ ml: '-8px' }}\n//             >\n//               Back to\n//               <img\n//                 src={\n//                   'https://assets-global.website-files.com/61ed56ae9da9fd7e0ef0a967/61f12e6faf73568658154dae_SitemarkDefault.svg'\n//                 }\n//                 style={logoStyle}\n//                 alt=\"Sitemark's logo\"\n//               />\n//             </Button>\n//           </Box>\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               flexGrow: 1,\n//               width: '100%',\n//               maxWidth: 500,\n//             }}\n//           >\n//             <Info totalPrice={activeStep >= 2 ? '$144.97' : '$134.98'} />\n//           </Box>\n//         </Grid>\n//         <Grid\n//           item\n//           sm={12}\n//           md={7}\n//           lg={8}\n//           sx={{\n//             display: 'flex',\n//             flexDirection: 'column',\n//             maxWidth: '100%',\n//             width: '100%',\n//             backgroundColor: { xs: 'transparent', sm: 'background.default' },\n//             alignItems: 'start',\n//             pt: { xs: 2, sm: 4 },\n//             px: { xs: 2, sm: 10 },\n//             gap: { xs: 4, md: 8 },\n//           }}\n//         >\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               justifyContent: { sm: 'space-between', md: 'flex-end' },\n//               alignItems: 'center',\n//               width: '100%',\n//               maxWidth: { sm: '100%', md: 600 },\n//             }}\n//           >\n//             <Box\n//               sx={{\n//                 display: { xs: 'flex', md: 'none' },\n//                 flexDirection: 'row',\n//                 width: '100%',\n//                 justifyContent: 'space-between',\n//               }}\n//             >\n//               <Button\n//                 startIcon={<ArrowBackRoundedIcon />}\n//                 component=\"a\"\n//                 href=\"/material-ui/getting-started/templates/landing-page/\"\n//                 sx={{ alignSelf: 'start' }}\n//               >\n//                 Back to\n//                 <img\n//                   src={\n//                     'https://assets-global.website-files.com/61ed56ae9da9fd7e0ef0a967/61f12e6faf73568658154dae_SitemarkDefault.svg'\n//                   }\n//                   style={logoStyle}\n//                   alt=\"Sitemark's logo\"\n//                 />\n//               </Button>\n//               <ToggleColorMode mode={mode} toggleColorMode={toggleColorMode} />\n//             </Box>\n//             <Box\n//               sx={{\n//                 display: { xs: 'none', md: 'flex' },\n//                 flexDirection: 'column',\n//                 justifyContent: 'space-between',\n//                 alignItems: 'flex-end',\n//                 flexGrow: 1,\n//                 height: 150,\n//               }}\n//             >\n//               <ToggleColorMode mode={mode} toggleColorMode={toggleColorMode} />\n//               <Stepper\n//                 id=\"desktop-stepper\"\n//                 activeStep={activeStep}\n//                 sx={{\n//                   width: '100%',\n//                   height: 40,\n//                 }}\n//               >\n//                 {steps.map((label) => (\n//                   <Step\n//                     sx={{\n//                       ':first-child': { pl: 0 },\n//                       ':last-child': { pr: 0 },\n//                     }}\n//                     key={label}\n//                   >\n//                     <StepLabel>{label}</StepLabel>\n//                   </Step>\n//                 ))}\n//               </Stepper>\n//             </Box>\n//           </Box>\n//           <Card\n//             sx={{\n//               display: { xs: 'flex', md: 'none' },\n//               width: '100%',\n//             }}\n//           >\n//             <CardContent\n//               sx={{\n//                 display: 'flex',\n//                 width: '100%',\n//                 alignItems: 'center',\n//                 justifyContent: 'space-between',\n//                 ':last-child': { pb: 2 },\n//               }}\n//             >\n//               <div>\n//                 <Typography variant=\"subtitle2\" gutterBottom>\n//                   Selected products\n//                 </Typography>\n//                 <Typography variant=\"body1\">\n//                   {activeStep >= 2 ? '$144.97' : '$134.98'}\n//                 </Typography>\n//               </div>\n//               <InfoMobile totalPrice={activeStep >= 2 ? '$144.97' : '$134.98'} />\n//             </CardContent>\n//           </Card>\n//           <Box\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               flexGrow: 1,\n//               width: '100%',\n//               maxWidth: { sm: '100%', md: 600 },\n//               maxHeight: '720px',\n//               gap: { xs: 5, md: 'none' },\n//             }}\n//           >\n//             <Stepper\n//               id=\"mobile-stepper\"\n//               activeStep={activeStep}\n//               alternativeLabel\n//               sx={{ display: { sm: 'flex', md: 'none' } }}\n//             >\n//               {steps.map((label) => (\n//                 <Step\n//                   sx={{\n//                     ':first-child': { pl: 0 },\n//                     ':last-child': { pr: 0 },\n//                     '& .MuiStepConnector-root': { top: { xs: 6, sm: 12 } },\n//                   }}\n//                   key={label}\n//                 >\n//                   <StepLabel\n//                     sx={{ '.MuiStepLabel-labelContainer': { maxWidth: '70px' } }}\n//                   >\n//                     {label}\n//                   </StepLabel>\n//                 </Step>\n//               ))}\n//             </Stepper>\n//             {activeStep === steps.length ? (\n//               <Stack spacing={2} useFlexGap>\n//                 <Typography variant=\"h1\">📦</Typography>\n//                 <Typography variant=\"h5\">Thank you for your order!</Typography>\n//                 <Typography variant=\"body1\" color=\"text.secondary\">\n//                   Your order number is\n//                   <strong>&nbsp;#140396</strong>. We have emailed your order\n//                   confirmation and will update you once its shipped.\n//                 </Typography>\n//                 <Button\n//                   variant=\"contained\"\n//                   sx={{\n//                     alignSelf: 'start',\n//                     width: { xs: '100%', sm: 'auto' },\n//                   }}\n//                 >\n//                   Go to my orders\n//                 </Button>\n//               </Stack>\n//             ) : (\n//               <React.Fragment>\n//                 {getStepContent(activeStep)}\n//                 <Box\n//                   sx={{\n//                     display: 'flex',\n//                     flexDirection: { xs: 'column-reverse', sm: 'row' },\n//                     justifyContent: activeStep !== 0 ? 'space-between' : 'flex-end',\n//                     alignItems: 'end',\n//                     flexGrow: 1,\n//                     gap: 1,\n//                     pb: { xs: 12, sm: 0 },\n//                     mt: { xs: 2, sm: 0 },\n//                     mb: '60px',\n//                   }}\n//                 >\n//                   {activeStep !== 0 && (\n//                     <Button\n//                       startIcon={<ChevronLeftRoundedIcon />}\n//                       onClick={handleBack}\n//                       variant=\"text\"\n//                       sx={{\n//                         display: { xs: 'none', sm: 'flex' },\n//                       }}\n//                     >\n//                       Previous\n//                     </Button>\n//                   )}\n\n//                   {activeStep !== 0 && (\n//                     <Button\n//                       startIcon={<ChevronLeftRoundedIcon />}\n//                       onClick={handleBack}\n//                       variant=\"outlined\"\n//                       fullWidth\n//                       sx={{\n//                         display: { xs: 'flex', sm: 'none' },\n//                       }}\n//                     >\n//                       Previous\n//                     </Button>\n//                   )}\n\n//                   <Button\n//                     variant=\"contained\"\n//                     endIcon={<ChevronRightRoundedIcon />}\n//                     onClick={handleNext}\n//                     sx={{\n//                       width: { xs: '100%', sm: 'fit-content' },\n//                     }}\n//                   >\n//                     {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n//                   </Button>\n//                 </Box>\n//               </React.Fragment>\n//             )}\n//           </Box>\n//         </Grid>\n//       </Grid>\n//       <ToggleCustomTheme\n//         toggleCustomTheme={toggleCustomTheme}\n//         showCustomTheme={showCustomTheme}\n//       />\n//     </ThemeProvider>\n//   );\n// }"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}